---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
        enabled: yes
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
          tags: clickhouse
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
          tags: clickhouse
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
      tags: clickhouse
    - name: Config upgrade
      become: true
      template:
        src: templates/listen_host.xml.j2
        dest: "/etc/clickhouse-server/config.d/listen_host.xml"
    - name: Flush handlers
      become: true
      ansible.builtin.meta: flush_handlers
      tags: clickhouse
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'CREATE DATABASE IF NOT EXISTS logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
      tags: clickhouse
    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'CREATE TABLE IF NOT EXISTS  logs.syslog (
                                                          message String
                                                      )
                                                      ENGINE = MergeTree()
                                                      ORDER BY tuple()'"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=82
      changed_when: create_table.rc == 0
      tags: clickhouse

- name: Install Vector
  hosts: vector
  tasks:
    - name: Get Vector distrib
      ansible.builtin.get_url:
        url: "{{ vector_rpm }}"
        dest: "./vector-{{ vector_version }}.rpm"
      tags: vector
    - name: Install vector packages
      become: true
      ansible.builtin.yum:
        name: vector-{{ vector_version }}.rpm
      tags: vector
    - name: Copy config
      become: true
      template:
        src: templates/vector.yaml.j2
        dest: "{{ vector_config_dir }}/vector.yaml"
        validate: vector validate --no-environment --config-yaml %s
      tags: vector
    - name: vector service
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /etc/systemd/system/vector.service
    - name: start vector
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
        daemon_reload: true

- name: Logging
  hosts: vector
  handlers:
    - name: start_rsyslog
      become: true
      ansible.builtin.service:
        name: rsyslog
        state: restarted
        enabled: yes
  tasks:
    - name: Make log dir
      ansible.builtin.file:
        path: /media/logs
        state: directory
        mode: '0755'
    - name: Make log file
      ansible.builtin.file:
        path: /media/logs/rsyslog.log
        state: touch
        mode: '0755'
    - name: Install rsyslog
      become: true
      ansible.builtin.yum:
        name: rsyslog
      notify: start_rsyslog
    - name: copy rsyslog config
      become: true
      copy:
        src: static/rsyslog.conf
        dest: /etc/rsyslog.conf
      notify: start_rsyslog
    - name: copy test script
      copy:
        src: static/syslog.py
        dest: /media/syslog.py

- name: Install Lighthouse + Nginx
  hosts: lighthouse
  handlers:
    - name: start|reload nginx
      block:
        - name: start_nginx
          command: nginx
        - name: reload_nginx
          command: nginx -s reload
      become: true
  pre_tasks:
    - name: install epel + nginx
      block:
        - name: install epel
          ansible.builtin.yum:
            name:
              - epel-release
            state: present
        - name: install nginx
          ansible.builtin.yum:
            name:
              - nginx
            state: present
        - name: create cokfig nginx
          template:
            src: templates/nginx.conf.j2
            dest: /etc/nginx/nginx.conf
            mode: 0644
        - name: install git
          ansible.builtin.yum:
            name: git
            state: present
      become: true
      notify: start_nginx
      tags: lighthouse
  tasks:
    - name: Copy lighthouse
      become: true
      git:
        repo: "{{ lighthouse_vcs }}"
        version: master
        dest: "{{ lighthouse_location_dir }}"
      tags: lighthouse
    - name: Create lighthouse config
      become: true
      template:
        src: lighthouse.conf.j2
        dest: /etc/nginx/conf.d/default.conf
        mode: 0644
      notify: reload_nginx
      tags: lighthouse
